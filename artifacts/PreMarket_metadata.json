{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "adminAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "feeWalletAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AccessControlBadConfirmation",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "neededRole",
						"type": "bytes32"
					}
				],
				"name": "AccessControlUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "AddressEmptyCode",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "AddressInsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailedInnerCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "refundValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "refundFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "doer",
						"type": "address"
					}
				],
				"name": "CancelOffer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "doer",
						"type": "address"
					}
				],
				"name": "CancelOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "refundAmount",
						"type": "uint256"
					}
				],
				"name": "CloseOffer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "offerType",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "exToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "collateral",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "fullMatch",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "doer",
						"type": "address"
					}
				],
				"name": "NewOffer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					}
				],
				"name": "NewOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "settleDuration",
						"type": "uint256"
					}
				],
				"name": "NewToken",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "doer",
						"type": "address"
					}
				],
				"name": "Settle2Steps",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "doer",
						"type": "address"
					}
				],
				"name": "SettleCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "doer",
						"type": "address"
					}
				],
				"name": "SettleFilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					}
				],
				"name": "TokenForceCancelSettlePhase",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "settleRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "settleTime",
						"type": "uint256"
					}
				],
				"name": "TokenToSettlePhase",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "tokens",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isAccepted",
						"type": "bool"
					}
				],
				"name": "UpdateAcceptedTokens",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldFeeWallet",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldFeeSettle",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldFeeRefund",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldPledgeRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newFeeWallet",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newFeeSettle",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newFeeRefund",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPledgeRate",
						"type": "uint256"
					}
				],
				"name": "UpdateConfig",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint48",
						"name": "oldValue",
						"type": "uint48"
					},
					{
						"indexed": false,
						"internalType": "uint48",
						"name": "newValue",
						"type": "uint48"
					}
				],
				"name": "UpdateTokenSettleDuration",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "oldValue",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "newValue",
						"type": "uint8"
					}
				],
				"name": "UpdateTokenStatus",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "OPERATOR_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "acceptedTokens",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "cancelOffer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "offerIds",
						"type": "uint256[]"
					}
				],
				"name": "cancelOffers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "config",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "pledgeRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feeRefund",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feeSettle",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "feeWallet",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "configInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "pledgeRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeRefund",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeSettle",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "feeWallet",
								"type": "address"
							}
						],
						"internalType": "struct Config",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "uint48",
						"name": "settleDuration",
						"type": "uint48"
					}
				],
				"name": "createToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "fillOffer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "fillOfferETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "offerIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "fillOffers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "offerIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "fillOffersETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "forceCancelOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "orderIds",
						"type": "uint256[]"
					}
				],
				"name": "forceCancelOrders",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "isAcceptedToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "isBuyOffer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "isSellOffer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastOfferId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastOfferIdInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastOrderId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastOrderIdInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "offerType",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "exToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "fullMatch",
						"type": "bool"
					}
				],
				"name": "newOffer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "offerType",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "fullMatch",
						"type": "bool"
					}
				],
				"name": "newOfferETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "offerAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "offerAmountAvailable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "offerExToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "offerStatus",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					}
				],
				"name": "offerValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "offers",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "offerType",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "exToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "collateral",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "filledAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "offeredBy",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "fullMatch",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "offersInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "offerType",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "tokenId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "exToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "collateral",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "filledAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "offeredBy",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "fullMatch",
								"type": "bool"
							}
						],
						"internalType": "struct Offer",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "orderStatus",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orders",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "offerId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ordersInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "offerId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "buyer",
								"type": "address"
							},
							{
								"internalType": "uint8",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct Order",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "callerConfirmation",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "tokenAddresses",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "isAccepted",
						"type": "bool"
					}
				],
				"name": "setAcceptedTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "settle2Steps",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "orderIds",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "hashes",
						"type": "bytes32[]"
					}
				],
				"name": "settle2StepsBatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "settleCancelled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "orderIds",
						"type": "uint256[]"
					}
				],
				"name": "settleCancelleds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "settleFilled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "orderIds",
						"type": "uint256[]"
					}
				],
				"name": "settleFilleds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "tokenCreated",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					}
				],
				"name": "tokenForceCancelSettlePhase",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint152",
						"name": "settleRate",
						"type": "uint152"
					}
				],
				"name": "tokenToSettlePhase",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					}
				],
				"name": "tokenToggleActivation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "tokens",
				"outputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint48",
						"name": "settleTime",
						"type": "uint48"
					},
					{
						"internalType": "uint48",
						"name": "settleDuration",
						"type": "uint48"
					},
					{
						"internalType": "uint152",
						"name": "settleRate",
						"type": "uint152"
					},
					{
						"internalType": "uint8",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "tokensInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token",
								"type": "address"
							},
							{
								"internalType": "uint48",
								"name": "settleTime",
								"type": "uint48"
							},
							{
								"internalType": "uint48",
								"name": "settleDuration",
								"type": "uint48"
							},
							{
								"internalType": "uint152",
								"name": "settleRate",
								"type": "uint152"
							},
							{
								"internalType": "uint8",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct Token",
						"name": "tokenInfo",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "feeWallet_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "feeSettle_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feeRefund_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pledgeRate_",
						"type": "uint256"
					}
				],
				"name": "updateConfig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "uint48",
						"name": "newValue",
						"type": "uint48"
					}
				],
				"name": "updateSettleDuration",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "withdrawStuckToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"AccessControlBadConfirmation()": [
					{
						"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
					}
				],
				"AccessControlUnauthorizedAccount(address,bytes32)": [
					{
						"details": "The `account` is missing a role."
					}
				],
				"AddressEmptyCode(address)": [
					{
						"details": "There's no code at `target` (it is not a contract)."
					}
				],
				"AddressInsufficientBalance(address)": [
					{
						"details": "The ETH balance of the account is not enough to perform the operation."
					}
				],
				"FailedInnerCall()": [
					{
						"details": "A call to an address target failed. The target may have reverted."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC20 token failed."
					}
				]
			},
			"events": {
				"RoleAdminChanged(bytes32,bytes32,bytes32)": {
					"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
				},
				"RoleGranted(bytes32,address,address)": {
					"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
				},
				"RoleRevoked(bytes32,address,address)": {
					"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
				}
			},
			"kind": "dev",
			"methods": {
				"cancelOffer(uint256)": {
					"params": {
						"offerId": "The ID of the offer to be cancelled."
					}
				},
				"cancelOffers(uint256[])": {
					"params": {
						"offerIds": "An array of offer IDs that the user wishes to cancel."
					}
				},
				"createToken(bytes32,uint48)": {
					"details": "Creates a new token. Only addresses with the OPERATOR_ROLE role can call this function.",
					"params": {
						"settleDuration": "The duration of the settlement, in seconds, representing the time from the start of the transaction to when it can be settled.",
						"tokenId": "The unique identifier of the token."
					}
				},
				"fillOffer(uint256,uint256)": {
					"params": {
						"amount": "The amount of the offer the filler wishes to fulfill. Must not exceed the available amount in the offer.",
						"offerId": "The ID of the offer being filled."
					}
				},
				"fillOfferETH(uint256,uint256)": {
					"params": {
						"amount": "The amount of the offer that the user wishes to fulfill.",
						"offerId": "The ID of the offer to be filled."
					}
				},
				"fillOffers(uint256[],uint256[])": {
					"params": {
						"amounts": "An array of amounts, each corresponding to an offer in the `offerIds` array.",
						"offerIds": "An array of offer IDs to be filled."
					}
				},
				"fillOffersETH(uint256[],uint256[])": {
					"params": {
						"amounts": "An array of amounts, each corresponding to an offer in the `offerIds` array.",
						"offerIds": "An array of offer IDs to be filled."
					}
				},
				"forceCancelOrder(uint256)": {
					"params": {
						"orderId": "The ID of the order to be canceled."
					}
				},
				"forceCancelOrders(uint256[])": {
					"params": {
						"orderIds": "An array of order IDs to be forcibly cancelled."
					}
				},
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"isAcceptedToken(address)": {
					"params": {
						"token": "The address of the token in question."
					}
				},
				"isBuyOffer(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"isSellOffer(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"newOffer(uint8,bytes32,uint256,uint256,address,bool)": {
					"params": {
						"amount": "The amount of tokens being offered for buy/sell.",
						"exToken": "The token address against which the offer is being made. Address(0) if the offer is in ETH.",
						"fullMatch": "A boolean indicating if the offer must be fully matched (true) or can be partially filled (false).",
						"offerType": "Specifies the type of offer: 1 for buy, 2 for sell.",
						"tokenId": "The unique identifier of the token for which the offer is being made.",
						"value": "The total value (in exchange token or ETH) that the offerer is willing to pay or receive."
					}
				},
				"newOfferETH(uint8,bytes32,uint256,uint256,bool)": {
					"params": {
						"offerType": ", tokenId, amount, value, and fullMatch parameters have the same definitions as in `newOffer`."
					}
				},
				"offerAmount(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"offerAmountAvailable(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"offerExToken(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"offerStatus(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"offerValue(uint256)": {
					"params": {
						"offerId": "The unique identifier of the offer."
					}
				},
				"offersInfo(uint256)": {
					"params": {
						"id": "The unique identifier of the offer."
					}
				},
				"orderStatus(uint256)": {
					"params": {
						"orderId": "The unique identifier of the order."
					}
				},
				"ordersInfo(uint256)": {
					"params": {
						"id": "The unique identifier of the order."
					}
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
				},
				"setAcceptedTokens(address[],bool)": {
					"params": {
						"isAccepted": "Boolean flag indicating whether the tokens should be accepted (true) or not (false).",
						"tokenAddresses": "An array of token addresses to be updated."
					}
				},
				"settle2Steps(uint256,bytes32)": {
					"params": {
						"hash": "A hash representing transaction details or verification information, used for additional security or validation.",
						"orderId": "The ID of the order being settled."
					}
				},
				"settle2StepsBatch(uint256[],bytes32[])": {
					"params": {
						"hashes": "An array of hashes, each corresponding to a transaction in the `orderIds` array for verification.",
						"orderIds": "An array of order IDs to be settled."
					}
				},
				"settleCancelled(uint256)": {
					"params": {
						"orderId": "The ID of the order to cancel settlement for."
					}
				},
				"settleCancelleds(uint256[])": {
					"params": {
						"orderIds": "An array of order IDs for which settlement is to be cancelled."
					}
				},
				"settleFilled(uint256)": {
					"params": {
						"orderId": "The ID of the order to settle."
					}
				},
				"settleFilleds(uint256[])": {
					"params": {
						"orderIds": "An array of order IDs to be settled."
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"tokenForceCancelSettlePhase(bytes32)": {
					"params": {
						"tokenId": "The unique identifier of the token."
					}
				},
				"tokenToSettlePhase(bytes32,address,uint152)": {
					"details": "Moves a token to the settlement phase. Only addresses with the OPERATOR_ROLE role can call this function.",
					"params": {
						"settleRate": "The settlement rate, representing how many tokens can be exchanged for 1M points.",
						"tokenAddress": "The contract address of the token.",
						"tokenId": "The unique identifier of the token."
					}
				},
				"tokenToggleActivation(bytes32)": {
					"params": {
						"tokenId": "The unique identifier of the token."
					}
				},
				"tokensInfo(bytes32)": {
					"params": {
						"id": "The unique identifier of the token, typically derived from its properties or a hash of its metadata."
					}
				},
				"updateConfig(address,uint256,uint256,uint256)": {
					"params": {
						"feeRefund_": "The fee percentage charged when an offer is cancelled and funds are refunded.",
						"feeSettle_": "The fee percentage charged upon the successful settlement of an order.",
						"feeWallet_": "The address of the wallet where transaction fees are collected.",
						"pledgeRate_": "The required collateral percentage for creating sell offers."
					}
				},
				"updateSettleDuration(bytes32,uint48)": {
					"params": {
						"newValue": "The new settle duration value in seconds.",
						"tokenId": "The unique identifier of the token."
					}
				},
				"withdrawStuckToken(address,address)": {
					"details": "Withdraws stuck tokens from the contract. Only addresses with the UPGRADER_ROLE role can call this function.",
					"params": {
						"_to": "The address to receive the withdrawn tokens.",
						"_token": "The address of the token to withdraw."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"configInfo()": {
					"notice": "Accesses the current configuration settings of the platform, including fees and the pledge rate."
				},
				"isAcceptedToken(address)": {
					"notice": "Checks whether a specific token is accepted for trading on the platform."
				},
				"lastOfferIdInfo()": {
					"notice": "Retrieves the identifier of the last offer made in the market, indicative of the total number of offers created."
				},
				"lastOrderIdInfo()": {
					"notice": "Returns the identifier of the last order processed in the system, serving as a measure of the platform's trading volume."
				},
				"withdrawStuckToken(address,address)": {
					"notice": "Use this function with caution to avoid accidentally moving funds."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"pre.sol": "PreMarket"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/AccessControl.sol": {
			"keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
			"license": "MIT",
			"urls": [
				"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
				"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
			]
		},
		"@openzeppelin/contracts/access/IAccessControl.sol": {
			"keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
			"license": "MIT",
			"urls": [
				"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
				"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
				"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
				"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
				"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
			"license": "MIT",
			"urls": [
				"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
				"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"pre.sol": {
			"keccak256": "0x58e158e10528ea818d32ea98348a69ae12d189647619056ea4b01609623f7fab",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6ec10501674ea8e1c4ffc9587f21a8cf0e337c7b10bb0934082c17b7cebbcae",
				"dweb:/ipfs/QmXGM6Kbei4eFVp4MDkSPTjkKHerJbS4mYMCZUhuUj2NFb"
			]
		}
	},
	"version": 1
}